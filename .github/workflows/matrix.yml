name: matrix
on: push
jobs:
  npd:
    runs-on: ubuntu-latest
    outputs:
      envi: "npd1"
    steps:
      - run: echo "hello npd - job npd"
  prd:
    runs-on: ubuntu-latest
    outputs:
      envi: "prd2"
    steps:
      - run: echo "hello prd - job prd"
  
  npd-start:
    runs-on: ubuntu-latest
    env:
      myenv: ${{ needs,npd.outputs.envi }}
    strategy:
      matrix:
        myenv: $myenv
    steps:
      - run: |
          echo ${{ matrix.myenv }}
  
          #prd-start:
          #  runs-on: ubuntu-latest
          #  strategy:
          #    matrix:
          #      env: ${{ needs.prd.outputs.env }}
          #  steps:
          #    - run: |
          #        echo ${{ matrix.env }}

      # job1:
      #   runs-on: ubuntu-latest
      #   strategy:
      #     matrix:
      #       env-class: ["npd","prd"]
      #   outputs:
      #     matrix: ${{ steps.set-matrix.outputs.name }}
      #   steps:
      #   - id: set-matrix
      #     run: echo "name=hello-${{ matrix.env-class }}" >> "$GITHUB_OUTPUT"
      # job2:
      #   runs-on: ubuntu-latest
      #   env:
      #     OUT_NPD: ${{ needs.job1.outputs.matrix-npd }}
      #     OUT_PRD: ${{ needs.job1.outputs.matrix-prd }}
      #     myvar: ${{ needs.job1.outputs.matrix }}
      #   steps:
      #     - run: |
      #         echo "${OUT_NPD}"
      #     - run: |
      #         echo "${OUT_PRD}"
      #     - run: |
      #         echo "$myvar"

        #job2:
        #  needs: job1
        #  runs-on: ubuntu-latest
        #  strategy:
        #    matrix: ${{fromJson(needs.job1.outputs.matrix)}}
        #  steps:
        #  - run: echo ${{ matrix.project }}
        #  - run: echo ${{ matrix.config }}
