name: AppOnboard
trigger: none
pr: none

pool:
  vmImage: "ubuntu-18.04"

parameters:
  - name: runDeploy
    displayName: Do you want run Terraform apply or just Terraform plan? Tick box if you want to run apply as well.
    type: boolean
    default: false
  - name: owner
    displayName: Owner of the Project WorkStream
  - name: projectShortCode
    displayName: "Project Short Code name(aka projectStream - 4 char) along with application. For e.g. slmt"
    type: string
  - name: placement
    displayName: Provide the placement of the subscription (PUB or PRV)?
    type: string
    values:
      - PUB
      - PRV
  - name: region
    displayName: Region for the application
    type: string
    values:
      - europe
      - us
      - australia
      - asia
  - name: workStream
    displayName: Provide the workStream name for the project. (for e.g. 4D, FUN - 3 Characters max)
    type: string
    default: "def"
  - name: environ
    displayName: Environment for the particular application. For e.g dev, prd etc.
    type: string
  - name: releaseVersion
    displayName: Enter the releaseVersion of the project
    default: "100"
    type: string
  - name: instance
    displayName: Provide the instance for the workStream
    default: "001"
    type: string
  - name: appsptype
    displayName: App service Plan required? if Required please specify the type else leave the default value of none.
    type: string
    default: none
    values:
      - none
      - linux
      - windows
      - both
  - name: appSubscriptionId
    displayName: Provide the id of empty subscription for the Application Environment
    type: string
  - name: vnet_prim
    displayName: primary vnet cidr range
    type: string
  - name: vnet_sec
    displayName: Secondary/DR vnet cidr range. provide only when subscription environment is prod.
    type: string
    default: "none"
  - name: tfvar
    displayName: Provide base64 encoded tfvar for the underlying onboarding code.
    type: string
    default: bm9uZT0iZW1wdHkiCg==
  - name: envtype
    displayName: Provide environment type (the cluster to onboard the namespace) to?
    default: "npd"
    values:
      - "npd"
      - "prd"
      - "sbx"

variables:
  - group: onboard
  - ${{ if eq(parameters.envtype, 'npd') }}:
      - template: templates/var_npd.yml
        parameters:
          workStream: ${{ parameters.workStream }}
          projectShortCode: ${{ parameters.projectShortCode }}
          environ: ${{ parameters.environ }}
          appSubscriptionId: ${{ parameters.appSubscriptionId }}
          placement: ${{ parameters.placement }}
          instance: ${{ parameters.instance }}
  - ${{ if eq(parameters.envtype, 'prd') }}:
      - template: templates/var_prd.yml
        parameters:
          workStream: ${{ parameters.workStream }}
          projectShortCode: ${{ parameters.projectShortCode }}
          environ: ${{ parameters.environ }}
          appSubscriptionId: ${{ parameters.appSubscriptionId }}
          placement: ${{ parameters.placement }}
          instance: ${{ parameters.instance }}
  - ${{ if eq(parameters.envtype, 'sbx') }}:
      - template: templates/var_sbx.yml
        parameters:
          workStream: ${{ parameters.workStream }}
          projectShortCode: ${{ parameters.projectShortCode }}
          environ: ${{ parameters.environ }}
          appSubscriptionId: ${{ parameters.appSubscriptionId }}
          placement: ${{ parameters.placement }}
          instance: ${{ parameters.instance }}

stages:
  - template: templates/project-onboard.yml
    parameters:
      workStream: ${{ parameters.workStream }}
      projectShortCode: ${{ parameters.projectShortCode }}
      environ: ${{ parameters.environ }}
      placement: ${{ parameters.placement }}
      instance: ${{ parameters.instance }}
      releaseVersion: ${{ parameters.releaseVersion }}
      appSubscriptionId: ${{ parameters.appSubscriptionId }}
      runDeploy: ${{ parameters.runDeploy }}
      tfvar: ${{ parameters.tfvar }}
      vnet_prim: ${{ parameters.vnet_prim }}
      vnet_sec: ${{ parameters.vnet_sec }}
      region: ${{ parameters.region }}
      envtype: ${{ parameters.envtype }}
      appsptype: ${{ parameters.appsptype }}
  - template: templates/project-sso-onboard.yml
    parameters:
      workStream: ${{ parameters.workStream }}
      projectShortCode: ${{ parameters.projectShortCode }}
      environ: ${{ parameters.environ }}
      runDeploy: ${{ parameters.runDeploy }}
      placement: ${{ parameters.placement }}
      envtype: ${{ parameters.envtype }}
